<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>pgcli</title><link href="http://pgcli.com/" rel="alternate"></link><link href="http://pgcli.com/feeds/all.atom.xml" rel="self"></link><id>http://pgcli.com/</id><updated>2015-06-16T00:00:00-07:00</updated><entry><title>Release v0.18.0</title><link href="http://pgcli.com/v0.18.0.html" rel="alternate"></link><updated>2015-06-16T00:00:00-07:00</updated><author><name>Amjith</name></author><id>tag:pgcli.com,2015-06-16:v0.18.0.html</id><summary type="html">&lt;p&gt;&lt;tt class="docutils literal"&gt;Pgcli&lt;/tt&gt; is a command line interface for Postgres database that does
auto-completion and syntax highlighting. You can install this version by:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;pip install -U pgcli
&lt;/pre&gt;
&lt;p&gt;Check &lt;a class="reference external" href="http://pgcli.com/install"&gt;detailed instructions&lt;/a&gt; if you're having difficulty.&lt;/p&gt;
&lt;p&gt;This release comes with the ability to save favorite queries, fuzzy matching in
auto-completion, new special commands (&lt;tt class="docutils literal"&gt;\#&lt;/tt&gt;), fix unicode issues in Windows and
lot more. Thanks to the many contributors.&lt;/p&gt;
&lt;div class="section" id="features"&gt;
&lt;h2&gt;Features:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;Add fuzzy matching for the table names and column names.&lt;/p&gt;
&lt;p&gt;Matching very long table/column names are now easier with fuzzy matching. The
fuzzy match works like the fuzzy open in SublimeText or Vim's Ctrl-P plugin.&lt;/p&gt;
&lt;p&gt;eg: Typing &lt;tt class="docutils literal"&gt;djmiviw&lt;/tt&gt; will match &lt;strong&gt;dj&lt;/strong&gt;ango_&lt;strong&gt;mi&lt;/strong&gt;gration_&lt;strong&gt;vi&lt;/strong&gt;ews since it is able to
match parts of the input to the full table name.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Timing information is now shown in seconds.&lt;/p&gt;
&lt;p&gt;The &lt;tt class="docutils literal"&gt;Command Time&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;Format Time&lt;/tt&gt; are now displayed in seconds instead
of a unitless number displayed in scientific notation.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Support for named queries (favorite queries). (Thanks: &lt;a class="reference external" href="https://github.com/brettatoms"&gt;Brett Atoms&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;Frequently typed queries can now be saved and recalled using a name using
newly added special commands (&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;\n[+]&lt;/span&gt;&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;\ns&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;\nd&lt;/tt&gt;).&lt;/p&gt;
&lt;p&gt;eg:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="literal-block"&gt;
# Save a query
pgcli&amp;gt; \ns simple select * from foo
saved

# List all saved queries
pgcli&amp;gt; \n+

# Execute a saved query
pgcli&amp;gt; \n simple

# Delete a saved query
pgcli&amp;gt; \nd simple
&lt;/pre&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Pasting queries into the pgcli repl is orders of magnitude faster. (Thanks: &lt;a class="reference external" href="https://github.com/jonathanslenders"&gt;Jonathan Slenders&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Add support for PGPASSWORD environment variable to pass the password for the
postgres database. (Thanks: &lt;a class="reference external" href="https://github.com/j-bennet"&gt;Iryna Cherniavska&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Add the ability to manually refresh autocompletions by typing &lt;tt class="docutils literal"&gt;\#&lt;/tt&gt; or
&lt;tt class="docutils literal"&gt;\refresh&lt;/tt&gt;. This is useful if the database was updated by an external means
and you'd like to refresh the auto-completions to pick up the new change.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="bug-fixes"&gt;
&lt;h2&gt;Bug Fixes:&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Fix an error when running &lt;tt class="docutils literal"&gt;\d table_name&lt;/tt&gt; when running on a table with rules. (Thanks: &lt;a class="reference external" href="https://github.com/sancopanco"&gt;Ali Kargın&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Fix a pgcli crash when entering non-ascii characters in Windows. (Thanks: &lt;a class="reference external" href="https://github.com/darikg"&gt;Darik Gamble&lt;/a&gt;, &lt;a class="reference external" href="https://github.com/jonathanslenders"&gt;Jonathan Slenders&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Faster rendering of expanded mode output by making the horizontal separator a fixed length string.&lt;/li&gt;
&lt;li&gt;Completion suggestions for the &lt;tt class="docutils literal"&gt;\c&lt;/tt&gt; command are not auto-escaped by default.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="internal-changes"&gt;
&lt;h2&gt;Internal Changes:&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Complete refactor of handling the back-slash commands. It is now easier to
add new special back-slash commands using a decorator.&lt;/li&gt;
&lt;li&gt;Upgrade prompt_toolkit to 0.39. (Thanks: &lt;a class="reference external" href="https://github.com/jonathanslenders"&gt;Jonathan Slenders&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Change the config file management to use ConfigObj.(Thanks: &lt;a class="reference external" href="https://github.com/brettatoms"&gt;Brett Atoms&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Add integration tests using &lt;tt class="docutils literal"&gt;behave&lt;/tt&gt;. (Thanks: &lt;a class="reference external" href="https://github.com/j-bennet"&gt;Iryna Cherniavska&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary><category term="python"></category><category term="release"></category><category term="changelog"></category><category term="postgres"></category></entry><entry><title>Release v0.17.0</title><link href="http://pgcli.com/v0.17.0.html" rel="alternate"></link><updated>2015-05-26T00:00:00-07:00</updated><author><name>Amjith</name></author><id>tag:pgcli.com,2015-05-26:v0.17.0.html</id><summary type="html">&lt;p&gt;&lt;tt class="docutils literal"&gt;Pgcli&lt;/tt&gt; is a command line interface for Postgres database that does
auto-completion and syntax highlighting. You can install this version by:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;pip install -U pgcli
&lt;/pre&gt;
&lt;p&gt;Check &lt;a class="reference external" href="http://pgcli.com/install"&gt;detailed instructions&lt;/a&gt; if you're having difficulty.&lt;/p&gt;
&lt;p&gt;This release comes with the latest version of prompt_tookit, improved
auto-completion support, better matching algorithm in auto-completion, new
special commands (&lt;tt class="docutils literal"&gt;\e&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;\dT&lt;/tt&gt;), fix CJK dispaly and a lot more. Thanks to
the many contributors.&lt;/p&gt;
&lt;div class="section" id="features"&gt;
&lt;h2&gt;Features:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;Add support for auto-completing view names. (Thanks: &lt;a class="reference external" href="https://github.com/darikg"&gt;Darik Gamble&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Add subsequence matching for completion. (Thanks: &lt;a class="reference external" href="https://github.com/drocco007"&gt;Daniel Rocco&lt;/a&gt;)
Previously completions only matched a table name if it started with the
partially typed word. Now completions will match even if the partially typed
word is in the middle of a suggestion.&lt;/p&gt;
&lt;p&gt;eg: When you type 'mig', 'django_migrations' will be suggested.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Completion for built-in tables and temporary tables are suggested after entering a prefix of &lt;tt class="docutils literal"&gt;pg_&lt;/tt&gt;. (Thanks: &lt;a class="reference external" href="https://github.com/darikg"&gt;Darik Gamble&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Add place holder doc strings for special commands that are planned for implementation. (Thanks: &lt;a class="reference external" href="https://github.com/j-bennet"&gt;Iryna Cherniavska&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Updated version of prompt_toolkit, now matching braces are highlighted. (Thanks: &lt;a class="reference external" href="https://github.com/jonathanslenders"&gt;Jonathan Slenders&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Added support for &lt;tt class="docutils literal"&gt;\e&lt;/tt&gt; command. Queries can be edited in an external editor. (Thanks: &lt;a class="reference external" href="https://github.com/j-bennet"&gt;Iryna Cherniavska&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;eg: When you type &lt;tt class="docutils literal"&gt;SELECT * FROM \e&lt;/tt&gt; it will be opened in an external editor.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Add special command &lt;tt class="docutils literal"&gt;\dT&lt;/tt&gt; to show datatypes. (Thanks: &lt;a class="reference external" href="https://github.com/darikg"&gt;Darik Gamble&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Add auto-completion support for datatypes in CREATE, SELECT etc. (Thanks: &lt;a class="reference external" href="https://github.com/darikg"&gt;Darik Gamble&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Improve the auto-completion in WHERE clause with logical operators. (Thanks: &lt;a class="reference external" href="https://github.com/darikg"&gt;Darik Gamble&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="bug-fixes"&gt;
&lt;h2&gt;Bug Fixes:&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Fix the table formatting while printing multi-byte characters (Chinese, Japanese etc). (Thanks: &lt;a class="reference external" href="https://github.com/xalley"&gt;蔡佳男&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Fix a crash when pg_catalog was present in search path. (Thanks: &lt;a class="reference external" href="https://github.com/darikg"&gt;Darik Gamble&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Fixed a bug that broke &lt;tt class="docutils literal"&gt;\e&lt;/tt&gt; when prompt_tookit was updated. (Thanks: &lt;a class="reference external" href="https://github.com/fpietka"&gt;François Pietka&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Fix the display of triggers as shown in the &lt;tt class="docutils literal"&gt;\d&lt;/tt&gt; output. (Thanks: &lt;a class="reference external" href="https://github.com/droustchev"&gt;Dimitar Roustchev&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Fix broken auto-completion for INNER JOIN, LEFT JOIN etc. (Thanks: &lt;a class="reference external" href="https://github.com/darikg"&gt;Darik Gamble&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Fix incorrect super() calls in pgbuffer, pgtoolbar and pgcompleter. No change in functionality but protects against future problems. (Thanks: &lt;a class="reference external" href="https://github.com/drocco007"&gt;Daniel Rocco&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Add missing schema completion for CREATE and DROP statements. (Thanks: &lt;a class="reference external" href="https://github.com/darikg"&gt;Darik Gamble&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Minor fixes around cursor cleanup.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary><category term="python"></category><category term="release"></category><category term="changelog"></category><category term="postgres"></category></entry><entry><title>Integrating pgcli with heroku toolbelt</title><link href="http://pgcli.com/heroku-pgcli.html" rel="alternate"></link><updated>2015-05-06T00:00:00-07:00</updated><author><name>Amjith</name></author><id>tag:pgcli.com,2015-05-06:heroku-pgcli.html</id><summary type="html">&lt;p&gt;Heroku is a popular PAAS provider that offers managed Postgres database. Heroku provides a convenience command to connect to the postgres database, which will launch &lt;code&gt;psql&lt;/code&gt;. Now it is possible to launch &lt;code&gt;pgcli&lt;/code&gt; instead of the default &lt;code&gt;psql&lt;/code&gt; for heroku Postgres by installing the &lt;a href="https://github.com/chrisanderton/heroku-pg-pgcli"&gt;heroku-pg-pgcli&lt;/a&gt; plugin for heroku tool belt.&lt;/p&gt;
&lt;h3&gt;Installation&lt;/h3&gt;
&lt;p&gt;Make sure pgcli is installed. If it is not installed check the installation &lt;a href="http://pgcli.com/install"&gt;instructions&lt;/a&gt;. Typically it is:&lt;/p&gt;
&lt;p&gt;Either:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    $ brew install pgcli    # Only on OS X
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;or &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    $ pip install pgcli   # Python package installation
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Then install the heroku plugin&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    $ heroku plugins:install git@github.com:chrisanderton/heroku-pg-pgcli.git
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Usage&lt;/h3&gt;
&lt;p&gt;Run this from within a Heroku app directory&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    $ heroku pg:pgcli
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;That will launch pgcli with the appropriate database credentials, taken from heroku DATABASE_URL for that application.&lt;/p&gt;
&lt;p&gt;That's it. &lt;/p&gt;
&lt;h3&gt;Credit&lt;/h3&gt;
&lt;p&gt;Thanks to &lt;a href="https://github.com/chrisanderton"&gt;Chris Anderton&lt;/a&gt; for creating this heroku plugin. &lt;/p&gt;</summary><category term="python"></category><category term="heroku"></category></entry><entry><title>A Better CLI for MySQL - Kickstarter Success</title><link href="http://pgcli.com/mysql-cli-kickstarter-success.html" rel="alternate"></link><updated>2015-05-05T00:00:00-07:00</updated><author><name>Amjith</name></author><id>tag:pgcli.com,2015-05-05:mysql-cli-kickstarter-success.html</id><summary type="html">&lt;p&gt;About a month ago, I started a new &lt;a href="https://www.kickstarter.com/projects/1839007321/mysql-cli"&gt;kickstarter
project&lt;/a&gt; to create a
MySQL client that can do auto-completion and syntax highlighting.&lt;/p&gt;
&lt;p&gt;An equivalent of &lt;a href="http://pgcli.com"&gt;pgcli&lt;/a&gt; for the MySQL database.&lt;/p&gt;
&lt;p&gt;Today I'm happy to announce that the kickstarter has reached it's &lt;a href="https://www.kickstarter.com/projects/1839007321/mysql-cli"&gt;goal&lt;/a&gt; and it's
strongly marching towards the stretch goal. &lt;/p&gt;
&lt;p&gt;Thank you everyone for pitching in and helping me reach the goal.&lt;/p&gt;
&lt;p&gt;This is the last day to back the project, if you'd like to get early access to the app.&lt;/p&gt;
&lt;p&gt;I would like to extend my thanks to the first Gold sponsor
&lt;a href="https://jweiland.net/"&gt;jweiland.net&lt;/a&gt;. The boost from their generous
contribution gave me the confidence that we'll reach the goal.&lt;/p&gt;
&lt;p&gt;Thanks to all the supporters who spread the word and pitched in. I appreciate it very much.&lt;/p&gt;</summary><category term="python"></category><category term="mysql"></category></entry><entry><title>Introducing the core devs of pgcli</title><link href="http://pgcli.com/core-1.html" rel="alternate"></link><updated>2015-04-28T00:00:00-07:00</updated><author><name>Amjith</name></author><id>tag:pgcli.com,2015-04-28:core-1.html</id><summary type="html">&lt;p&gt;It is my pleasure to announce the core devs of the pgcli project. &lt;/p&gt;
&lt;h1&gt;&lt;a href="https://github.com/drocco007"&gt;Daniel Rocco&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Daniel made pgcli handle JSON, bytea, and large decimal values correctly. He improved the completion matching by adding sub-string matching. His creative solution to reducing completion noise is extremely useful. He also added numerous tests to cover a lot more branches in the code path.&lt;/p&gt;
&lt;p&gt;Daniel loves Python and is a frequent speaker at PyAtl on introductory topics, testing, design, and shiny things; he loves seeing the spark of wonder and delight in people's eyes when someone shares a novel, surprising, or beautiful idea. He lives in Atlanta with a microbiologist and four aspiring rocketeers.&lt;/p&gt;
&lt;h1&gt;&lt;a href="https://github.com/darikg"&gt;Darik Gamble&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Darik is a prolific committer who is credited for numerous feature additions in pgcli. He single handedly made pgcli &lt;a href="http://pgcli.com/embedding-pgcli-in-ipython.html"&gt;embeddable inside IPython&lt;/a&gt;, which still blows my mind. He made pgcli behave more like psql, added schema support to completion (this is huge), view name completion, auto-escaping of tables/columns and numerous special command (&lt;code&gt;\dv, \df, \dn&lt;/code&gt;). Darik's feature additions are creative and well-thought out.&lt;/p&gt;
&lt;h1&gt;&lt;a href="https://github.com/j-bennet"&gt;Iryna Cherniavska&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Iryna is one of the earliest contributors to the project. She is credited for adding a rich set of tests to the completion engine and brought in mocks to test some of the tricky bits. She also added many of the special commands such as &lt;code&gt;\dv, \di, \e&lt;/code&gt; and contributed to the &lt;a href="https://github.com/dbcli/pgcli/blob/master/DEVELOP.rst#adding-postgresql-special-meta-commands"&gt;developer document&lt;/a&gt;. Favorite editor: PyCharm (yes, spoiled by JetBrains products). Favorite feature of pgcli: syntax highlighting. Random tidbit of information: started her acquaintance with the WWW through FIDOnet.&lt;/p&gt;
&lt;h1&gt;&lt;a href="https://github.com/macobo"&gt;Karl-Aksel Puulmann&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Karl fixed some of the critical issues early on in the project, which paved the way to get this project widely accepted. Karl made pgcli handle unicode. He created robust testing fixtures to make it easy for contributors to add tests. Thanks to Karl, it is now possible to cancel queries that are in flight using Ctrl-C.&lt;/p&gt;
&lt;p&gt;He also created an experimental &lt;a href="https://github.com/macobo/sqlcomplete"&gt;SQL completion engine&lt;/a&gt; that can provide accurate suggestions based on actual grammar instead of the heuristics. It is still in the experimental phase and we hope to use it in pgcli in the future.&lt;/p&gt;
&lt;h1&gt;Thanks&lt;/h1&gt;
&lt;p&gt;I'm extremely grateful to all of the core devs for their contributions so far and their willingness to play the role of core dev in the project. I'm quite lucky to be working with such amazing devs.&lt;/p&gt;</summary><category term="python"></category></entry><entry><title>Django Integration of pgcli</title><link href="http://pgcli.com/django-pgcli.html" rel="alternate"></link><updated>2015-04-25T00:00:00-07:00</updated><author><name>Amjith</name></author><id>tag:pgcli.com,2015-04-25:django-pgcli.html</id><summary type="html">&lt;p&gt;Django web framework has a rich set of management commands. One of them is &lt;code&gt;python manage.py dbshell&lt;/code&gt;. This will launch the default database repl and connect to the appropriate database for the web application.&lt;/p&gt;
&lt;p&gt;Now it is possible to launch &lt;code&gt;pgcli&lt;/code&gt; instead of the default &lt;code&gt;psql&lt;/code&gt; for Postgres by installing the &lt;a href="https://github.com/ashchristopher/django-pgcli"&gt;django-pgcli&lt;/a&gt; python package.&lt;/p&gt;
&lt;h3&gt;Installation&lt;/h3&gt;
&lt;p&gt;Install it using &lt;code&gt;pip&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    $ pip install django-pgcli
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Then add &lt;code&gt;django_pgcli&lt;/code&gt; to the list of INSTALLED_APPS in your project's settings.py.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    INSTALLED_APPS = [
        ...,
        &amp;#39;django_pgcli&amp;#39;,
    ]
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Usage&lt;/h3&gt;
&lt;p&gt;Launch the &lt;code&gt;dbshell&lt;/code&gt; through the management command. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    $ python manage.py dbshell
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;That will launch pgcli with the appropriate database credentials. &lt;/p&gt;
&lt;p&gt;That's it. &lt;/p&gt;
&lt;h3&gt;Credit&lt;/h3&gt;
&lt;p&gt;My personal thanks to &lt;a href="https://github.com/ashchristopher/"&gt;Ash Christopher&lt;/a&gt; for taking the initiative to create this package. It was a well requested feature of pgcli, you just made a lot of people happy. &lt;/p&gt;</summary><category term="python"></category><category term="django"></category></entry><entry><title>dbcli - a new github org</title><link href="http://pgcli.com/dbcli.html" rel="alternate"></link><updated>2015-04-18T00:00:00-07:00</updated><author><name>Amjith</name></author><id>tag:pgcli.com,2015-04-18:dbcli.html</id><summary type="html">&lt;p&gt;I'm officially moving the &lt;a href="https://github.com/dbcli/pgcli"&gt;pgcli&lt;/a&gt; project into
the &lt;a href="https://github.com/dbcli"&gt;dbcli&lt;/a&gt; org in github.&lt;/p&gt;
&lt;h2&gt;Why?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;pgcli is a community project now and having an organization helps solidify that.&lt;/li&gt;
&lt;li&gt;More peope will now have write access to the repo. Watch for the announcement of the core-devs of pgcli.&lt;/li&gt;
&lt;li&gt;It's a better home for similar projects in the future, such as mysql-cli, sqlite-cli etc.&lt;/li&gt;
&lt;li&gt;pgcli has a few subpackages that should be individual projects (sqlcompelter.py, pgspecial.py etc) so it can be repurposed in other projects. They will be broken out into separate repos and pulled into pgcli as dependencies in the future.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;How does it affect users?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;The changes to the code base will be peer reviewed by more than one person. Result: Improved stability, Less bugs.&lt;/li&gt;
&lt;li&gt;Quicker turn around on bug reports and feature requests, since more people will feel the ownership towards the project instead of that one guy.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="python"></category></entry><entry><title>Screencast: pgcli basics</title><link href="http://pgcli.com/pgcli-basics-screencast.html" rel="alternate"></link><updated>2015-04-06T00:00:00-07:00</updated><author><name>Amjith</name></author><id>tag:pgcli.com,2015-04-06:pgcli-basics-screencast.html</id><summary type="html">&lt;p&gt;I created a screencast to showcase some of the basic features of &lt;a href="http://pgcli.com"&gt;pgcli&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;pgcli is a client for postgres that can do autocompletion and syntax highlighting.&lt;/p&gt;
&lt;p&gt;This video covers:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Installation&lt;/li&gt;
&lt;li&gt;Launching pgcli&lt;/li&gt;
&lt;li&gt;Switching databases&lt;/li&gt;
&lt;li&gt;Basic auto-completion for SELECT, CREATE, INSERT and JOIN statements.&lt;/li&gt;
&lt;li&gt;Expanded output&lt;/li&gt;
&lt;li&gt;Multi-line mode    &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Video:&lt;/p&gt;
&lt;iframe src="https://player.vimeo.com/video/124125257" width="500" height="281" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;If there is enough interest, I'll produce a few more screencasts of other
features available in &lt;a href="http://pgcli.com"&gt;pgcli&lt;/a&gt;. Please reach me via
&lt;a href="https://twitter.com/amjithr"&gt;twitter&lt;/a&gt; or &lt;a href="mailto:amjith.r@gmail.com"&gt;email&lt;/a&gt; to
provide feedback.&lt;/p&gt;
&lt;p&gt;I'm also working on a new project called &lt;a href="http://mysql-cli.com"&gt;mysql-cli&lt;/a&gt;.
I've launched a
&lt;a href="https://www.kickstarter.com/projects/1839007321/mysql-cli"&gt;kickstarter&lt;/a&gt;
campaign for that project and I'd like your support. Please forward the
&lt;a href="http://mysql-cli.com"&gt;project&lt;/a&gt; to your friends and coworkers.&lt;/p&gt;</summary><category term="python"></category><category term="screencast"></category><category term="postgres"></category></entry><entry><title>Kickstarter: mysql-cli</title><link href="http://pgcli.com/mysql-cli-kickstarter.html" rel="alternate"></link><updated>2015-04-05T00:00:00-07:00</updated><author><name>Amjith</name></author><id>tag:pgcli.com,2015-04-05:mysql-cli-kickstarter.html</id><summary type="html">&lt;p&gt;I'm starting a project called &lt;a href="http://mysql-cli.com"&gt;mysql-cli&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://mysql-cli.com"&gt;mysql-cli&lt;/a&gt; will be a command line client for MySQL, with
auto-completion and syntax highlighting. An equivalent of
&lt;a href="http://pgcli.com"&gt;pgcli&lt;/a&gt; for MySQL database.&lt;/p&gt;
&lt;p&gt;I'm raising funds for the project through &lt;a href="http://mysql-cli.com"&gt;kickstarter&lt;/a&gt;.
The goal is to compensate for the development time and resources (hosting,
testing infrastructure, etc) as well as motivate me to keep going.&lt;/p&gt;
&lt;iframe src="https://player.vimeo.com/video/124121398" width="500" height="281" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;When I launched pgcli earlier this year I had high hopes for it. I anticipated
that I might reach a hundred users and even a couple of contributions. I
announced it on
&lt;a href="https://twitter.com/amjithr/status/552491986255896576"&gt;Twitter&lt;/a&gt; and HackerNews
and it took about an hour to reach 100 stars. By the second day it was a top
trending repo in all of Github. Right now it is hovering near the 1600 mark for
the number of stars, with more than 70 pull requests (merged). &lt;/p&gt;
&lt;p&gt;During the first week of launch, I slept about 3 hours each night because the
pull requests and issues came flooding. I made a personal resolve to answer
every communique within 24 hours. This meant answering personal emails,
responding to issues filed, reviewing pull requests etc. I
&lt;a href="http://pgcli.com/about"&gt;vowed&lt;/a&gt; to be polite and respectful to my users and
contributors and I've had nothing but pleasant interactions with them. &lt;/p&gt;
&lt;p&gt;My hope is to provide the same level of dedication and support to
&lt;a href="http://mysql-cli.com"&gt;mysql-cli&lt;/a&gt;. There is definitely a need for it, since
every time I use the default MySQL client I want to scream obscenities at my
computer and I can't be the only one. :)&lt;/p&gt;
&lt;p&gt;The plan is to launch &lt;a href="http://mysql-cli.com"&gt;mysql-cli&lt;/a&gt; in July 2015 and open
up the repo to public. If you want to get involved sooner, please back the
project on &lt;a href="http://mysql-cli.com"&gt;kickstarter&lt;/a&gt; and I'll add you to the early access list. :)&lt;/p&gt;</summary><category term="python"></category><category term="mysql"></category></entry><entry><title>Release v0.16.3</title><link href="http://pgcli.com/v0.16.3.html" rel="alternate"></link><updated>2015-04-02T00:00:00-07:00</updated><author><name>Amjith</name></author><id>tag:pgcli.com,2015-04-02:v0.16.3.html</id><summary type="html">&lt;p&gt;&lt;tt class="docutils literal"&gt;Pgcli&lt;/tt&gt; is a command line interface for Postgres database that does
auto-completion and syntax highlighting. You can install this version by:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;pip install -U pgcli
&lt;/pre&gt;
&lt;p&gt;Check &lt;a class="reference external" href="http://pgcli.com/install"&gt;detailed instructions&lt;/a&gt; if you're having difficulty.&lt;/p&gt;
&lt;p&gt;This is a minor bug-fix release that fixes the syntax-highlighting of various
Postgres specific keywords and adds the ability to surface messages thrown by
sql exceptions.&lt;/p&gt;
&lt;div class="section" id="bug-fixes"&gt;
&lt;h2&gt;Bug Fixes:&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Add more SQL keywords for auto-complete suggestion.&lt;/li&gt;
&lt;li&gt;Messages raised as part of stored procedures are no longer ignored.&lt;/li&gt;
&lt;li&gt;Use postgres flavored syntax highlighting instead of generic ANSI SQL.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary><category term="python"></category><category term="release"></category><category term="changelog"></category><category term="postgres"></category></entry><entry><title>Release v0.16.2</title><link href="http://pgcli.com/v0.16.2.html" rel="alternate"></link><updated>2015-03-22T00:00:00-07:00</updated><author><name>Amjith</name></author><id>tag:pgcli.com,2015-03-22:v0.16.2.html</id><summary type="html">&lt;p&gt;&lt;tt class="docutils literal"&gt;Pgcli&lt;/tt&gt; is a command line interface for Postgres database that does
auto-completion and syntax highlighting. You can install this version by:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;pip install -U pgcli
&lt;/pre&gt;
&lt;p&gt;Check &lt;a class="reference external" href="http://pgcli.com/install"&gt;detailed instructions&lt;/a&gt; if you're having difficulty.&lt;/p&gt;
&lt;p&gt;This is a bug-fix release that improves auto-completion and formatting of large
numbers in the output.&lt;/p&gt;
&lt;div class="section" id="bug-fixes"&gt;
&lt;h2&gt;Bug Fixes:&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Fix a bug where the schema qualifier was ignored by the auto-completion.
As a result the suggestions for tables vs functions are cleaner. (Thanks: &lt;a class="reference external" href="https://github.com/darikg"&gt;darikg&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Remove scientific notation when formatting large numbers. (Thanks: &lt;a class="reference external" href="https://github.com/drocco007"&gt;Daniel Rocco&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Add the FUNCTION keyword to auto-completion.&lt;/li&gt;
&lt;li&gt;Display NULL values as &amp;lt;null&amp;gt; instead of empty strings.&lt;/li&gt;
&lt;li&gt;Fix the completion refresh when &lt;tt class="docutils literal"&gt;\connect&lt;/tt&gt; is executed.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary><category term="python"></category><category term="release"></category><category term="changelog"></category><category term="postgres"></category></entry><entry><title>Release v0.16.1</title><link href="http://pgcli.com/v0.16.1.html" rel="alternate"></link><updated>2015-03-03T00:00:00-08:00</updated><author><name>Amjith</name></author><id>tag:pgcli.com,2015-03-03:v0.16.1.html</id><summary type="html">&lt;p&gt;&lt;tt class="docutils literal"&gt;Pgcli&lt;/tt&gt; is a command line interface for Postgres database that does
auto-completion and syntax highlighting. You can install this version by:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;pip install -U pgcli
&lt;/pre&gt;
&lt;p&gt;Check &lt;a class="reference external" href="http://pgcli.com/install"&gt;detailed instructions&lt;/a&gt; if you're having difficulty.&lt;/p&gt;
&lt;p&gt;This is a minor bug-fix release that fixes unicode issues with hstore.&lt;/p&gt;
&lt;div class="section" id="bug-fixes"&gt;
&lt;h2&gt;Bug Fixes:&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Fix unicode issues with hstore. Previously the unicode type caster for hstore
was done via a hardcoded oid. This is wrong since the oid for hstore will
vary between different databases. Now the oid is determined at the time of
connection and a type caster is registered accordingly.&lt;/li&gt;
&lt;li&gt;Fix an error when database is changed using \c.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary><category term="python"></category><category term="release"></category><category term="changelog"></category><category term="postgres"></category></entry><entry><title>Release v0.16.0</title><link href="http://pgcli.com/v0.16.0.html" rel="alternate"></link><updated>2015-03-01T00:00:00-08:00</updated><author><name>Amjith</name></author><id>tag:pgcli.com,2015-03-01:v0.16.0.html</id><summary type="html">&lt;p&gt;&lt;tt class="docutils literal"&gt;Pgcli&lt;/tt&gt; is a command line interface for Postgres database that does
auto-completion and syntax highlighting. You can install this version by:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;pip install -U pgcli
&lt;/pre&gt;
&lt;p&gt;Check &lt;a class="reference external" href="http://pgcli.com/install"&gt;detailed instructions&lt;/a&gt; if you're having difficulty.&lt;/p&gt;
&lt;p&gt;This release adds Vi-keybindings, improvements to special commands (new
additions ds and df) and fix a lot of annoyances. Many thanks to the
contributors.&lt;/p&gt;
&lt;div class="section" id="features"&gt;
&lt;h2&gt;Features:&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Add ds special command to show sequences.&lt;/li&gt;
&lt;li&gt;Add Vi mode for keybindings. This can be enabled by adding 'vi = True' in ~/.pgclirc. (Thanks: &lt;a class="reference external" href="https://github.com/jayzeng"&gt;Jay Zeng&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Add a -v/--version flag to pgcli.&lt;/li&gt;
&lt;li&gt;Add completion for TEMPLATE keyword and smart-completion for
'CREATE DATABASE blah WITH TEMPLATE &amp;lt;tab&amp;gt;'. (Thanks: &lt;a class="reference external" href="https://github.com/drocco007"&gt;Daniel Rocco&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Add custom decoders to json/jsonb to emulate the behavior of psql. This
removes the unicode prefix (eg: u'Éowyn') in the output. (Thanks: &lt;a class="reference external" href="https://github.com/drocco007"&gt;Daniel Rocco&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Add df special command to show functions. (Thanks: &lt;a class="reference external" href="https://github.com/darikg"&gt;darikg&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Make suggestions for special commands smarter. eg: dn - only suggests schemas. (Thanks: &lt;a class="reference external" href="https://github.com/darikg"&gt;darikg&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Print out the version and other meta info about pgcli at startup.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="bug-fixes"&gt;
&lt;h2&gt;Bug Fixes:&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Fix a rare crash caused by adding new schemas to a database. (Thanks: &lt;a class="reference external" href="https://github.com/darikg"&gt;darikg&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Make dt command honor the explicit schema specified in the arg. (Thanks: &lt;a class="reference external" href="https://github.com/darikg"&gt;darikg&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Print BIGSERIAL type as Integer instead of Float.&lt;/li&gt;
&lt;li&gt;Show completions for special commands at the beginning of a statement. (Thanks: &lt;a class="reference external" href="https://github.com/drocco007"&gt;Daniel Rocco&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Allow special commands to work in a multi-statement case where multiple sql
statements are separated by semi-colon in the same line.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary><category term="python"></category><category term="release"></category><category term="changelog"></category><category term="postgres"></category></entry><entry><title>Release v0.15.X</title><link href="http://pgcli.com/v0.15.X.html" rel="alternate"></link><updated>2015-02-08T00:00:00-08:00</updated><author><name>Amjith</name></author><id>tag:pgcli.com,2015-02-08:v0.15.X.html</id><summary type="html">&lt;p&gt;&lt;tt class="docutils literal"&gt;Pgcli&lt;/tt&gt; is a command line interface for Postgres database that does
auto-completion and syntax highlighting. You can install this version by:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;pip install -U pgcli
&lt;/pre&gt;
&lt;p&gt;Check &lt;a class="reference external" href="http://pgcli.com/install"&gt;detailed instructions&lt;/a&gt; if you're having difficulty.&lt;/p&gt;
&lt;p&gt;This version adds more color schemes to the syntax highlighting. An attempt to
add support for PyPy by using psycopg2cffi failed. Python 3 support for
psycopg2cffi was only added recently and there are still a few corner cases
where it fails.&lt;/p&gt;
&lt;div class="section" id="features"&gt;
&lt;h2&gt;Features:&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Add syntax color styles to config. Try &lt;tt class="docutils literal"&gt;syntax_style=fruity&lt;/tt&gt;. Availble themes
are &lt;cite&gt;manni&lt;/cite&gt;, &lt;cite&gt;igor&lt;/cite&gt;, &lt;cite&gt;xcode&lt;/cite&gt;, &lt;cite&gt;vim&lt;/cite&gt;, &lt;cite&gt;autumn&lt;/cite&gt;, &lt;cite&gt;vs&lt;/cite&gt;, &lt;cite&gt;rrt&lt;/cite&gt;, &lt;cite&gt;native&lt;/cite&gt;,
&lt;cite&gt;perldoc&lt;/cite&gt;, &lt;cite&gt;borland&lt;/cite&gt;, &lt;cite&gt;tango&lt;/cite&gt;, &lt;cite&gt;emacs&lt;/cite&gt;, &lt;cite&gt;friendly&lt;/cite&gt;, &lt;cite&gt;monokai&lt;/cite&gt;,
&lt;cite&gt;paraiso-dark&lt;/cite&gt;, &lt;cite&gt;colorful&lt;/cite&gt;, &lt;cite&gt;murphy&lt;/cite&gt;, &lt;cite&gt;bw&lt;/cite&gt;, &lt;cite&gt;pastie&lt;/cite&gt;, &lt;cite&gt;paraiso-light&lt;/cite&gt;,
&lt;cite&gt;trac&lt;/cite&gt;, &lt;cite&gt;default&lt;/cite&gt;, &lt;cite&gt;fruity&lt;/cite&gt;.&lt;/li&gt;
&lt;li&gt;Add auto-completion for COPY statements.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="bug-fixes"&gt;
&lt;h2&gt;Bug Fixes:&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Treat boolean values as strings instead of ints.&lt;/li&gt;
&lt;li&gt;Make di, dv and dt to be schema aware. (Thanks: &lt;a class="reference external" href="https://github.com/darikg"&gt;darikg&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Make column name display unicode compatible.&lt;/li&gt;
&lt;li&gt;Override the LESS options completely instead of appending to it.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary><category term="python"></category><category term="release"></category><category term="changelog"></category><category term="postgres"></category></entry><entry><title>Embedding pgcli in IPython</title><link href="http://pgcli.com/embedding-pgcli-in-ipython.html" rel="alternate"></link><updated>2015-02-03T00:00:00-08:00</updated><author><name>Amjith</name></author><id>tag:pgcli.com,2015-02-03:embedding-pgcli-in-ipython.html</id><summary type="html">&lt;p&gt;&lt;a href="http://ipython.org/"&gt;IPython&lt;/a&gt; is an interactive shell for Python that is
well-suited to do data-analysis. It has integration for plotting, data-analysis
libraries, parallel computing etc. &lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/catherinedevlin/ipython-sql"&gt;IPython-sql&lt;/a&gt; is an IPython
extension that provides an easy way to load data from a database into the
ipython environment to do the data-analysis. Here's an example. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;load_ext&lt;/span&gt; &lt;span class="n"&gt;sql&lt;/span&gt;

&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;sql&lt;/span&gt; &lt;span class="n"&gt;postgres&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;localhost&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;5432&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;misago_testforum&lt;/span&gt;
&lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="s"&gt;u&amp;#39;Connected: None@misago_testforum&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;sql&lt;/span&gt; &lt;span class="n"&gt;select&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;django_migrations&lt;/span&gt; &lt;span class="n"&gt;where&lt;/span&gt; &lt;span class="nb"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;
&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;rows&lt;/span&gt; &lt;span class="n"&gt;affected&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;u&amp;#39;admin&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;u&amp;#39;0001_initial&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2014&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;26&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;43&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;625938&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
          &lt;span class="n"&gt;tzinfo&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;psycopg2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tz&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FixedOffsetTimezone&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;offset&lt;/span&gt;&lt;span class="o"&gt;=-&lt;/span&gt;&lt;span class="mi"&gt;480&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;)))]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We can now manipulate the data that was imported from the database. &lt;/p&gt;
&lt;p&gt;The trouble is ipython doesn't have the ability to do auto-completion for the
sql statements. So it's a bit hard to iterate on the sql statement to get the
right data.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://pgcli.com"&gt;Pgcli&lt;/a&gt; on the other hand is a postgres client that provides
auto-completion for SQL statements.&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://github.com/darikg"&gt;Darik Gamble&lt;/a&gt; we can now embed pgcli
directly inside the ipython console. We can iterate over the sql statements in
pgcli with the comfort of auto-completion and preview the results before
loading it into IPython. When we're satisfied with the results, all we do is
quit pgcli, and we'll drop back to IPython loaded with the results from the
last query.&lt;/p&gt;
&lt;p&gt;Let's see how that works. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# IPython Console&lt;/span&gt;

&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;load_ext&lt;/span&gt; &lt;span class="n"&gt;pgcli&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;magic&lt;/span&gt;

&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;pgcli&lt;/span&gt; &lt;span class="n"&gt;postgres&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;localhost&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;5432&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;misago_testforum&lt;/span&gt;
&lt;span class="n"&gt;Connected&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="nd"&gt;@misago_testforum&lt;/span&gt;

&lt;span class="c"&gt;# pgcli repl&lt;/span&gt;

&lt;span class="n"&gt;misago_testforum&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;django_migrations&lt;/span&gt; &lt;span class="n"&gt;WHERE&lt;/span&gt; &lt;span class="nb"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;
&lt;span class="o"&gt;+------+-------+--------------+----------------------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;   &lt;span class="nb"&gt;id&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;app&lt;/span&gt;   &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;         &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;applied&lt;/span&gt;                          &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;|------+-------+--------------+----------------------------------|&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;    &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;admin&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mo"&gt;0001&lt;/span&gt;&lt;span class="n"&gt;_initial&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;2014&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;24&lt;/span&gt; &lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;26&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;43.625938&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;08&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;00&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+------+-------+--------------+----------------------------------+&lt;/span&gt;
&lt;span class="n"&gt;SELECT&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="n"&gt;misago_testforum&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;exit&lt;/span&gt;
&lt;span class="n"&gt;GoodBye&lt;/span&gt;&lt;span class="err"&gt;!&lt;/span&gt;
&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;rows&lt;/span&gt; &lt;span class="n"&gt;affected&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;

&lt;span class="c"&gt;# Back on IPython Console. &lt;/span&gt;

&lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;u&amp;#39;admin&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;u&amp;#39;0001_initial&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2014&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;26&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;43&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;625938&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
          &lt;span class="n"&gt;tzinfo&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;psycopg2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tz&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FixedOffsetTimezone&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;offset&lt;/span&gt;&lt;span class="o"&gt;=-&lt;/span&gt;&lt;span class="mi"&gt;480&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;)))]&lt;/span&gt;

&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt;
&lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;u&amp;#39;admin&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;u&amp;#39;0001_initial&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2014&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;26&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;43&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;625938&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
          &lt;span class="n"&gt;tzinfo&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;psycopg2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tz&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FixedOffsetTimezone&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;offset&lt;/span&gt;&lt;span class="o"&gt;=-&lt;/span&gt;&lt;span class="mi"&gt;480&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;)))]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;That's it. So if you're using IPython for data-analysis and have your data
residing in a Database, you can easily import it in using ipython-sql and
pgcli.&lt;/p&gt;
&lt;h3&gt;Installation&lt;/h3&gt;
&lt;p&gt;Install pgcli and ipython-sql and you're all set to go. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;pip install pgcli ipython ipython-sql
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you have feedback, please reach out via
&lt;a href="https://twitter.com/amjithr"&gt;twitter&lt;/a&gt; or
&lt;a href="https://github.com/amjith/pgcli/issues"&gt;github&lt;/a&gt;. Thank you!&lt;/p&gt;</summary><category term="ipython"></category><category term="python"></category><category term="postgres"></category></entry><entry><title>Release v0.14.0</title><link href="http://pgcli.com/v0.14.0.html" rel="alternate"></link><updated>2015-01-31T00:00:00-08:00</updated><author><name>Amjith</name></author><id>tag:pgcli.com,2015-01-31:v0.14.0.html</id><summary type="html">&lt;p&gt;A huge release that adds completion support for schemas.&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;Pgcli&lt;/tt&gt; is a command line interface for Postgres database that does
auto-completion and syntax highlighting. You can upgrade using:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;pip install -U pgcli
&lt;/pre&gt;
&lt;p&gt;Check &lt;a class="reference external" href="http://pgcli.com/install"&gt;detailed instructions&lt;/a&gt; if you're having difficulty.&lt;/p&gt;
&lt;div class="section" id="features"&gt;
&lt;h2&gt;Features:&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Add alias completion support to ON keyword. (Thanks: &lt;a class="reference external" href="https://github.com/j-bennet"&gt;Iryna Cherniavska&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Add LIMIT keyword to completion.&lt;/li&gt;
&lt;li&gt;Auto-completion for Postgres schemas. (Thanks: &lt;a class="reference external" href="https://github.com/darikg"&gt;darikg&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Better unicode handling for datatypes, dbname and roles.&lt;/li&gt;
&lt;li&gt;Add timing command to time the sql commands.
This can be set via config file (~/.pgclirc) using &lt;tt class="docutils literal"&gt;timing = True&lt;/tt&gt;.&lt;/li&gt;
&lt;li&gt;Add different table styles for displaying output.
This can be changed via config file (~/.pgclirc) using &lt;tt class="docutils literal"&gt;table_format = fancy_grid&lt;/tt&gt;.&lt;/li&gt;
&lt;li&gt;Add confirmation before printing results that have more than 1000 rows.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="bug-fixes"&gt;
&lt;h2&gt;Bug Fixes:&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Performance improvements to expanded view display (x).&lt;/li&gt;
&lt;li&gt;Cast bytea files to text while displaying. (Thanks: &lt;a class="reference external" href="https://github.com/drocco007"&gt;Daniel Rocco&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Added a list of reserved words that should be auto-escaped.&lt;/li&gt;
&lt;li&gt;Auto-completion is now case-insensitive.&lt;/li&gt;
&lt;li&gt;Fix the broken completion for multiple sql statements. (Thanks: &lt;a class="reference external" href="https://github.com/darikg"&gt;darikg&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary><category term="python"></category><category term="release"></category><category term="changelog"></category><category term="postgres"></category></entry><entry><title>Release v0.13.0</title><link href="http://pgcli.com/v0.13.0.html" rel="alternate"></link><updated>2015-01-14T00:00:00-08:00</updated><author><name>Amjith</name></author><id>tag:pgcli.com,2015-01-14:v0.13.0.html</id><summary type="html">&lt;p&gt;A small release that gets &lt;tt class="docutils literal"&gt;pgcli&lt;/tt&gt; closer to being a drop in replacement for
&lt;tt class="docutils literal"&gt;psql&lt;/tt&gt;.&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;pip install -U pgcli
&lt;/pre&gt;
&lt;p&gt;Check &lt;a class="reference external" href="http://pgcli.com/install"&gt;detailed instructions&lt;/a&gt; if you're having difficulty.&lt;/p&gt;
&lt;div class="section" id="features"&gt;
&lt;h2&gt;Features:&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Add -d/--dbname option to the commandline.
eg: pgcli -d database&lt;/li&gt;
&lt;li&gt;Add the username as an argument after the database.
eg: pgcli dbname user&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="bug-fixes"&gt;
&lt;h2&gt;Bug Fixes:&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Fix the crash when \c fails.&lt;/li&gt;
&lt;li&gt;Fix the error thrown by \d when triggers are present.&lt;/li&gt;
&lt;li&gt;Fix broken behavior on \?. (Thanks: &lt;a class="reference external" href="https://github.com/darikg"&gt;darikg&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary><category term="python"></category><category term="release"></category><category term="changelog"></category><category term="postgres"></category></entry><entry><title>One week after launch</title><link href="http://pgcli.com/post-launch.html" rel="alternate"></link><updated>2015-01-13T00:00:00-08:00</updated><author><name>Amjith</name></author><id>tag:pgcli.com,2015-01-13:post-launch.html</id><summary type="html">&lt;p&gt;Pgcli was &lt;a class="reference external" href="http://pgcli.com/launch.html"&gt;launched&lt;/a&gt; approximately one week ago.&lt;/p&gt;
&lt;p&gt;It was an extremely successful launch, beyond any of my wildest imaginations.&lt;/p&gt;
&lt;div class="section" id="obligatory-vanity-metrics"&gt;
&lt;h2&gt;Obligatory Vanity Metrics:&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Google Analytics: 21K views and 12.2K users.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://twitter.com/amjithr/status/552491986255896576"&gt;Twitter&lt;/a&gt;: 70 retweets, 68 favs.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/amjith/pgcli"&gt;Github&lt;/a&gt;: 1,230 stars, 45 forks, 28 watchers.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://news.ycombinator.com/item?id=8844723"&gt;HackerNews&lt;/a&gt;: 227 points&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Enough with the vanity.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="highlights"&gt;
&lt;h2&gt;Highlights&lt;/h2&gt;
&lt;p&gt;Here are some metrics that I'm personally proud to present. Since launch.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Pull Requests Opened: 40&lt;/li&gt;
&lt;li&gt;Pull Requests Merged: 38&lt;/li&gt;
&lt;li&gt;Issues Opened: 62&lt;/li&gt;
&lt;li&gt;Issues Closed: 34&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Let's break it down a little bit more.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;Number of Releases: 5&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Number of Features Added: 11&lt;/li&gt;
&lt;li&gt;Features added by community: 11&lt;/li&gt;
&lt;li&gt;Bugs fixed by community: 10&lt;/li&gt;
&lt;li&gt;Features added by author: 1&lt;/li&gt;
&lt;li&gt;Bugs fixed by author: 3&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I have not included the numerous typo fixes contributed by the community. (yes,
I'm a little bit ashamed by how many mistakes I make when I type).&lt;/p&gt;
&lt;p&gt;I'm flattered by how many people pitched in to help fix bugs and add features.
At one point I found a bug and filed an issue to keep track of it and 5 minutes
later I got a pull request to fix it. I was completely floored by the
enthusiasm shown by the contributors.&lt;/p&gt;
&lt;p&gt;I had an internal goal of responding to Pull Requests, Issues and emails within
24 hours. Even if I couldn't fix the issue or implement a requested feature, I
wanted to acknowledge it and give feedback about whether I'll do it or not. I
was able to keep that goal, as you'll see every &lt;a class="reference external" href="https://github.com/amjith/pgcli/issues"&gt;issue&lt;/a&gt; in Github right now has
a comment from me (except for the ones I filed myself).&lt;/p&gt;
&lt;p&gt;I was also able to keep up the &lt;a class="reference external" href="http://pgcli.com/about"&gt;responsibility&lt;/a&gt; I outlined the about page.&lt;/p&gt;
&lt;p&gt;Phew! What a week. I feel invigorated and refueled. Looking forward to working
through the issues and feature requests.&lt;/p&gt;
&lt;/div&gt;
</summary><category term="python"></category></entry><entry><title>Release v0.12.0</title><link href="http://pgcli.com/v0.12.0.html" rel="alternate"></link><updated>2015-01-13T00:00:00-08:00</updated><author><name>Amjith</name></author><id>tag:pgcli.com,2015-01-13:v0.12.0.html</id><summary type="html">&lt;p&gt;A feature packed &lt;a class="reference external" href="https://pypi.python.org/pypi/pgcli/0.12.0"&gt;release&lt;/a&gt;. You can install/upgrade using&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;pip install -U pgcli
&lt;/pre&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;0.12.0&lt;/h2&gt;
&lt;div class="section" id="features"&gt;
&lt;h3&gt;Features:&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Upgrade to prompt_toolkit version 0.26 (Thanks:&lt;a class="reference external" href="https://github.com/macobo"&gt;Karl-Aksel Puulmann&lt;/a&gt;)&lt;ul&gt;
&lt;li&gt;Adds Ctrl-left/right to move the cursor one word left/right respectively.&lt;/li&gt;
&lt;li&gt;Internal API changes.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;IPython integration through &lt;a class="reference external" href="https://github.com/catherinedevlin/ipython-sql"&gt;ipython-sql&lt;/a&gt; (Thanks:&lt;a class="reference external" href="https://github.com/darikg"&gt;darikg&lt;/a&gt;)&lt;ul&gt;
&lt;li&gt;Add an ipython magic extension to embed pgcli inside ipython. (more details to follow)&lt;/li&gt;
&lt;li&gt;Results from a pgcli query are sent back to ipython.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Multiple sql statments in the same line separated by semi-colon. (Thanks:&lt;a class="reference external" href="https://github.com/macobo"&gt;Karl-Aksel Puulmann&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="bug-fixes"&gt;
&lt;h3&gt;Bug Fixes:&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Fix 'message' attribute not found exception in Python 3. (Thanks:&lt;a class="reference external" href="https://github.com/GMLudo"&gt;Ludovic Gasc&lt;/a&gt; )&lt;/li&gt;
&lt;li&gt;Use the database username as the database name instead of defaulting to OS username. (Thanks:&lt;a class="reference external" href="https://github.com/fpietka"&gt;François Pietka&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Auto-completion for auto-escaped column/table names.&lt;/li&gt;
&lt;li&gt;Fix i-reverse-search to work in prompt_toolkit version 0.26.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
</summary><category term="python"></category><category term="release"></category><category term="changelog"></category><category term="postgres"></category></entry><entry><title>Launching pgcli</title><link href="http://pgcli.com/launch.html" rel="alternate"></link><updated>2015-01-06T00:00:00-08:00</updated><author><name>Amjith</name></author><id>tag:pgcli.com,2015-01-06:launch.html</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="http://pgcli.com"&gt;Pgcli&lt;/a&gt; was launched today on &lt;a class="reference external" href="https://news.ycombinator.com/item?id=8844723"&gt;HackerNews&lt;/a&gt; and &lt;a class="reference external" href="http://www.reddit.com/r/Python/comments/2riuj0/pgcli_a_cli_for_postgres_with_autocompletion_and/"&gt;Reddit&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://pgcli.com"&gt;Pgcli&lt;/a&gt; is a command line interface for Postgres database that can do
auto-completion and syntax-highlighting among other things. A list of &lt;a class="reference external" href="http://pgcli.com/features"&gt;features&lt;/a&gt;
with screenshots are available on the &lt;a class="reference external" href="http://pgcli.com/features"&gt;features&lt;/a&gt; page.&lt;/p&gt;
&lt;p&gt;Source is available on github: &lt;a class="reference external" href="http://github.com/amjith/pgcli"&gt;http://github.com/amjith/pgcli&lt;/a&gt;&lt;/p&gt;
</summary><category term="python"></category><category term="postgres"></category></entry></feed>